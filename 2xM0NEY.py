# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import telebot
from database import *
from telebot import types
from time import sleep
import random


# –ù—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
admin = '@AAnimeshnikk'
z_admin = '@pypcdev'
chat = 'https://t.me/twoxchat'
news = 'https://t.me/twoxnews'
id = '560083718' # –¢–≤–æ–π –∏–¥, —á—Ç–æ-–±—ã –±–æ—Ç –∫–∏–¥–∞–ª —Ç–µ–±–µ –≤ce, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –±–æ—Ç–µ

# –î–ª—è –∫–∏–≤–∏ –∞–ø–∏
# token = ''         # https://qiwi.com/api
# phone = ''

# –ê–ø–∏ –±–æ—Ç–∞, —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º(–æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∞–ø–∏)
bot = telebot.TeleBot('1072358209:AAHiQ__0NsNCsQEbld73xv25zjr-zGWATds')

# –ó–∞—Å—Ç–∞–≤–ª—è–µ–º –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —á–∞—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def reg(message):
    conn = NewConnectionToAccountsDatabase()
    try:
        data = conn.GetFullAccountDataByID(message.from_user.id)
        if data[TELEGRAM_NAME] == "@UnknownTelegramUser%s" % message.from_user.id and message.from_user.username is not None:
            conn.UpdateTelegramName(message.from_user.id, "@%s" % message.from_user.username)
    except:
        conn.CreateNewAccount(message.from_user.id)
        telegram_name = ""
        if message.from_user.username is not None:
            conn.UpdateTelegramName(message.from_user.id, "@%s"% message.from_user.username)
            telegram_name = "@%s"% message.from_user.username
        else:
            conn.UpdateTelegramName(message.from_user.id, "@UnknownTelegramUser%s" % message.from_user.id)
            telegram_name = "@UnknownTelegramUser%s" % message.from_user.id

        username = ""
        if message.from_user.first_name is not None and message.from_user.last_name is not None:
            username = message.from_user.first_name + " " + message.from_user.last_name
        elif message.from_user.first_name is not None:
            username = message.from_user.first_name
        else:
            username = message.from_user.last_name

        conn.UpdateUserName(message.from_user.id, username)

        bot.send_message(message.from_user.id, "‚úÖ –í–∞—Å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ. –¢–µ–∫—É—â–∏–π –≤–∏–¥–µ–º–∏–π –Ω–∏–∫–Ω–µ–π–º: %s" % telegram_name)



    conn.CommitToDatabase()
    conn.CloseConnection()
    del conn

    main(message)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main(message):
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –∫–Ω–æ–ø–∫–∏
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–ê–∫–∫–∞—É–Ω—Çüê∂', callback_data='account')
    btn2 = types.InlineKeyboardButton(text = '–î–µ–Ω—å–≥–∏üíµ', callback_data = 'money')
    btn3 = types.InlineKeyboardButton(text = '–ü–æ–º–æ—â—åüöë', callback_data = 'help')
    btn4 = types.InlineKeyboardButton(text = '–ö–æ–º–Ω–∞—Ç—ãüèô\n(–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã–µ)', callback_data = 'roomsfix')
    btn5 = types.InlineKeyboardButton(text = '–ö–æ–º–Ω–∞—Ç—ãüåÜ\n(–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)', callback_data = 'roomsunfix')
    markup.row(btn1, btn2)
    markup.row(btn4, btn5)
    markup.row(btn3)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(message.from_user.id,
    f'''
    ‚≠ïÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é :

    üëÆ‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä : {admin}
    üëÆ‚Äç‚ôÇÔ∏è –ó–∞–º. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ : {z_admin}

    üí¨ –ß–∞—Ç : {chat}
    üëÅ –ù–æ–≤–æ—Å—Ç–∏ : {news}

    –ù–∞–∂–º–∏—Ç–µ \"–ü–æ–º–æ—â—åüöë\" –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
    –ü—Ä–∏—è—Ç–æ–π –∏–≥—Ä—ã!
    ''',
        disable_web_page_preview = True,
        reply_markup = markup
        )

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
    if call.data == 'help':
        markup = types.InlineKeyboardMarkup()
        exit = types.InlineKeyboardButton(text = '–ó–∞–∫—Ä—ã—Ç—å', callback_data = 'menu')
        btn1 = types.InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', url='https://t.me/AAnimeshnikk')
        btn2 = types.InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—Å—è —Å –∑–∞–º. –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', url='https://t.me/pypcdev')
        markup.row(btn1)
        markup.row(btn2)
        markup.row(exit)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text =
'''
–ß—Ç–æ –±—ã –∏–≥—Ä–∞—Ç—å:
–í–Ω–µ—Å–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –¥–µ–ø–æ–∑–∏—Ç.
–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –ø–æ–¥ —Å–≤–æ—é —Å—É–º–º—É –ª–∏–±–æ –∑–∞–π–¥–∏—Ç–µ –≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–æ–º–Ω–∞—Ç—É.
(–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–æ–º–Ω–∞—Ç–∞ - –∫–æ–º–Ω–∞—Ç–∞ –±–µ–∑ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ–π —Å—É–º–º—ã –¥–ª—è –∏–≥—Ä—ã –Ω–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–æ–π.
–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã —Å—Ç–∞–≤–∫–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω—è—Ç—Å—è –∏ –≤–∞—à–∏ —à–∞–Ω—Å—ã. –ë–æ–ª—å—à–µ —Å—Ç–∞–≤–∫–∞ - –±–æ–ª—å—à–µ —à–∞–Ω—Å)
–ó–∞–π–¥—è –≤ –∫–æ–º–Ω–∞—Ç—É —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ–π —Å—Ç–∞–≤–∫–æ–π —Å –≤–∞—à–µ–≥–æ –∞–∫–∞—É–Ω—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–Ω–∏–º–µ—Ç—Å—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏.
–í –∫–æ–º–Ω–∞—Ç–µ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ–π —Å—Ç–∞–≤–∫–æ–π —à–∞–Ω—Å—ã —Ä–æ–∑–¥–µ–ª—è—é—Ç—Å—è –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏ –ø–æ—Ä–æ–≤–Ω—É.
–í –∫–æ–º–Ω–∞—Ç–µ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–≤–∫–æ–π –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–º–Ω–∞—Ç–µ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ —Ç—Ä—ë—Ö —á–µ–ª–æ–≤–µ–∫ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä –≤ 2 –º–∏–Ω—É—Ç—ã.
–ó–∞ 5 —Å–µ–∫—É–Ω–¥ –¥–æ –∫–æ–Ω—Ü–∞ —Ç–∞–π–º–µ—Ä–∞ –∫–æ–º–Ω–∞—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Å–º–æ–≥—É—Ç –±–æ–ª—å—à–µ –ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è)
–ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é —Ç–∞–π–º–µ—Ä–∞ –±–æ—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö —à–∞–Ω—Å–æ–≤.
–ü–æ–±–µ–¥–∏–≤—à–µ–º—É –Ω–∞ –∞–∫–∞—É–Ω—Ç –ø–µ—Ä–µ—á–µ—Å–ª—è–µ—Ç—Å—è –≤–µ—Å—å –±–∞–Ω–∫ –∫–æ–º–Ω–∞—Ç—ã –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∫–æ–º–∏—Å–∏–∏ –±–æ—Ç–∞ - 10%.
–í–≤–æ–¥ –∏ –≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ –º–µ–Ω—é "–î–µ–Ω—å–≥–∏üíµ".


‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è

üî∫üî∫üî∫–ö–û–ú–ò–°–°–ò–Ø –ú–û–ñ–ï–¢ –ë–´–¢–¨ –£–ú–ï–ù–¨–®–ï–ù–ê –ï–°–õ–ò –£ –ü–û–ë–ï–î–ò–¢–ï–õ–Ø –í –ò–ú–ï–ù–ò –ï–°–¢–¨ "@twoxmoney_bot"üî∫üî∫üî∫
–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —É –ø–æ–±–µ–¥–∏–≤—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–º–µ–Ω–∏ –∏–ª–∏ –≤ —Ñ–∞–º–∏–ª–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º —Å—Ç—Ä–æ–∫–∏ "@twoxmoney_bot" –∫–æ–º–∏—Å—Å–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –¥–æ 5%
''',
        reply_markup = markup)

    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif call.data == 'menu':

        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤—Å—ë –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ main()
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text='–ê–∫–∫–∞—É–Ω—Çüê∂', callback_data='account')
        btn2 = types.InlineKeyboardButton(text = '–î–µ–Ω—å–≥–∏üíµ', callback_data = 'money')
        btn3 = types.InlineKeyboardButton(text = '–ü–æ–º–æ—â—åüöë', callback_data = 'help')
        btn4 = types.InlineKeyboardButton(text = '–ö–æ–º–Ω–∞—Ç—ãüèô\n(–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã–µ)', callback_data = 'roomsfix')
        btn5 = types.InlineKeyboardButton(text = '–ö–æ–º–Ω–∞—Ç—ãüåÜ\n(–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)', callback_data = 'roomsunfix')
        markup.row(btn1, btn2)
        markup.row(btn4, btn5)
        markup.row(btn3)

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text =
f'''
‚≠ïÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é :

üëÆ‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä : {admin}
üëÆ‚Äç‚ôÇÔ∏è –ó–∞–º. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ : {z_admin}
üí¨–ß–∞—Ç : {chat}
üëÅ–ù–æ–≤–æ—Å—Ç–∏ : {news}

–ù–∞–∂–º–∏—Ç–µ \"–ü–æ–º–æ—â—åüöë\" –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
–ü—Ä–∏—è—Ç–æ–π –∏–≥—Ä—ã!
''',
        disable_web_page_preview = True,
        reply_markup = markup
        )

    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ "–î–µ–Ω—å–≥–∏"
    elif call.data == 'money':
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text = '–í–≤–æ–¥üè¶', callback_data = 'deposit')
        btn1 = types.InlineKeyboardButton(text = '–í—ã–≤–æ–¥üí∏', callback_data = 'withdrawal')
        back = types.InlineKeyboardButton(text = '–ù–∞–∑–∞–¥üîô', callback_data = 'menu')
        markup.row(btn)
        markup.row(btn1)
        markup.row(back)
        bot.edit_message_text(chat_id = call.message.chat.id,
        message_id = call.message.message_id,
        text ='–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å : ',
        reply_markup = markup)

    # –î–µ–ø–æ–∑–∏—Ç
    elif call.data == 'deposit':
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text = '15 —Ä—É–±', callback_data = '15r')
        btn1 = types.InlineKeyboardButton(text = '30 —Ä—É–±', callback_data = '30r')
        btn2 = types.InlineKeyboardButton(text = '50 —Ä—É–±', callback_data = '50r')
        btn3 = types.InlineKeyboardButton(text = '100 —Ä—É–±', callback_data = '100r')
        btn4 = types.InlineKeyboardButton(text = '250 —Ä—É–±', callback_data = '250r')
        btn5 = types.InlineKeyboardButton(text = '500 —Ä—É–±', callback_data = '500r')
        btn6 = types.InlineKeyboardButton(text = '1000 —Ä—É–±', callback_data = '1000r')
        btn7 = types.InlineKeyboardButton(text = '2500 —Ä—É–±', callback_data = '2500r')
        btn8 = types.InlineKeyboardButton(text = '5000 —Ä—É–±', callback_data = '5000r')
        btn9 = types.InlineKeyboardButton(text = '10000 —Ä—É–±', callback_data = '10000r')
        back = types.InlineKeyboardButton(text = '–ù–∞–∑–∞–¥üîô', callback_data = 'money')
        markup.row(btn,btn1)
        markup.row(btn2,btn3)
        markup.row(btn4, btn5)
        markup.row(btn6,btn7)
        markup.row(btn8,btn9)
        markup.row(back)

        bot.edit_message_text(chat_id = call.message.chat.id,
        message_id = call.message.message_id,
        text ='–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ : ',
        reply_markup = markup)

    # –ê–∫–∫–∞—É–Ω—Ç
    elif call.data == "account":
        conn = NewConnectionToAccountsDatabase()

        data = conn.GetFullAccountDataByID(call.message.chat.id)
        show_name = ""
        if data[PRIMARY_NAME] == TELEGRAM_NAME:
            show_name = data[TELEGRAM_NAME]
        else:
            show_name = data[USER_NAME]

        markup = types.InlineKeyboardMarkup()
        if data[PRIMARY_NAME] == TELEGRAM_NAME:
            btn1 = types.InlineKeyboardButton("–í–∫–ª—é—á–∏—Ç—å –ø–æ–∫–∞–∑ 2xM0NEY Username", callback_data="turn_user_name")
        else:
            btn1 = types.InlineKeyboardButton("–í–∫–ª—é—á–∏—Ç—å –ø–æ–∫–∞–∑ Telegram Nickname", callback_data="turn_telegram_name")
        btn2 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å 2xM0NEY Username", callback_data="change_user_name")
        back = types.InlineKeyboardButton(text = '–ù–∞–∑–∞–¥üîô', callback_data = 'menu')
        markup.row(btn1)
        markup.row(btn2)
        markup.row(back)

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
        text=f'''
        üëÅ‚Äçüó® –í–∏–¥–∏–º–∏–π –Ω–∏–∫–Ω–µ–π–º: {show_name}

üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data[BALANCE]} —Ä—É–±.

üïí –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data[REGISTRATION_DATE]}

        ''', reply_markup=markup)

        conn.CloseConnection()
        del conn

    elif call.data == "turn_user_name":
        conn = NewConnectionToAccountsDatabase()
        showed_name = conn.GetFullAccountDataByID(call.message.chat.id)[USER_NAME]
        conn.UpdatePrimaryName(call.message.chat.id, USER_NAME)
        conn.CommitToDatabase()
        conn.CloseConnection()
        del conn

        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='account')
        markup.row(back)

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
        text='‚úÖ –£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–∏–¥–∏–º–∏–π –Ω–∏–∫–Ω–µ–π–º: %s' % showed_name, reply_markup=markup)


    elif call.data == "turn_telegram_name":
        conn = NewConnectionToAccountsDatabase()
        showed_name = conn.GetFullAccountDataByID(call.message.chat.id)[TELEGRAM_NAME]
        conn.UpdatePrimaryName(call.message.chat.id, TELEGRAM_NAME)
        conn.CommitToDatabase()
        conn.CloseConnection()
        del conn

        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='account')
        markup.row(back)

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
        text='‚úÖ –£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–∏–¥–∏–º–∏–π –Ω–∏–∫–Ω–µ–π–º: %s' % showed_name, reply_markup=markup)

    elif call.data == "change_user_name":
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='account')
        markup.row(back)
        bot.send_message(call.message.chat.id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è", disable_web_page_preview=True)

        @bot.message_handler(func=lambda message: True, content_types=['text'])
        def change_name(message):
            if len(message.text) > 32:
                bot.send_message(call.message.chat.id, "‚ùå –î—É–º–∞—é —Ç–µ–±–µ –∏ 32 —Å–∏–º–≤–æ–ª–æ–≤ —Ö–≤–∞—Ç–∏—Ç —Å –≥–æ–ª–æ–≤–æ–π –¥–ª—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞!. ‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è", disable_web_page_preview=True)
            else:
                bot.send_message(call.message.chat.id, "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å...", disable_web_page_preview=True)
                conn = NewConnectionToAccountsDatabase()
                data = conn.GetFullAccountDataByID(message.from_user.id)
                try:
                    dt = conn.GetFullAccountDataByUserName(message.text)
                    if dt[ID] == message.from_user.id:
                        bot.send_message(call.message.chat.id, "‚ùå –ó–∞—á–µ–º –º–µ–Ω—è—Ç—å —Å–≤–æ–µ –∏–º—è –Ω–∞ —Ç–æ–∂–µ —Å–∞–º–æ–µ? ‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è",
                                         disable_web_page_preview=True)
                    else:
                        bot.send_message(call.message.chat.id, "‚ùå –¢–∞–∫–æ–π —É–∂–µ –µ—Å—Ç—å, –¥—É–º–∞—é —Ç–µ–±–µ –ª—É—Ç—à–µ –∏–º–µ—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∏–π –Ω–∏–∫–Ω–µ–π–º, –Ω–µ —Ç–∞–∫ –ª–∏? ‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è", disable_web_page_preview=True)
                except:
                    conn.UpdateUserName(message.from_user.id, message.text)
                    bot.send_message(call.message.chat.id, "‚úÖ –û—Ç–ª–∏—á–Ω–∏–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∏–π –Ω–∏–∫–Ω–µ–π–º! –ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω–µ–Ω! ‚å®Ô∏è –ß—Ç–æ–±–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —Ä–∞–∑ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–∏–π –Ω–∏–∫–Ω–µ–π–º!",
                                     disable_web_page_preview=True, reply_markup=markup)

                conn.CommitToDatabase()
                conn.CloseConnection()
                del conn






    elif call.data == 'roomsfix':
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text = '[0/10] 15 —Ä—É–± ‚Ññ1', callback_data = 'roomfix1')
        btn1 = types.InlineKeyboardButton(text = '[0/10] 15 —Ä—É–± ‚Ññ2', callback_data = 'roomfix2')
        btn2 = types.InlineKeyboardButton(text = '[0/10] 30 —Ä—É–± ‚Ññ3', callback_data = 'roomfix3')
        btn3 = types.InlineKeyboardButton(text = '[0/10] 50 —Ä—É–± ‚Ññ4', callback_data = 'roomfix4')
        btn4 = types.InlineKeyboardButton(text = '[0/10] 100 —Ä—É–± ‚Ññ5', callback_data = 'roomfix5')
        btn5 = types.InlineKeyboardButton(text = '[0/10] 250 —Ä—É–± ‚Ññ6', callback_data = 'roomfix6')
        btn6 = types.InlineKeyboardButton(text = '[0/10] 500 —Ä—É–± ‚Ññ7', callback_data = 'roomfix7')
        btn7 = types.InlineKeyboardButton(text = '[0/10] 1000 —Ä—É–± ‚Ññ8', callback_data = 'roomfix8')
        btn8 = types.InlineKeyboardButton(text = '[0/10] 2500 —Ä—É–± ‚Ññ9', callback_data = 'roomfix9')
        btn9 = types.InlineKeyboardButton(text = '[0/10] 5000 —Ä—É–± ‚Ññ10', callback_data = 'roomfix10')

        back = types.InlineKeyboardButton(text = '–ù–∞–∑–∞–¥üîô', callback_data = 'menu')

        markup.row(btn,btn1)
        markup.row(btn2,btn3)
        markup.row(btn4, btn5)
        markup.row(btn6,btn7)
        markup.row(btn8,btn9)
        markup.row(back)

        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id,
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É :', reply_markup = markup)

    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    elif call.data == 'roomsunfix':
        markup = types.InlineKeyboardMarkup()
        btn = btn = types.InlineKeyboardButton(text = '[0/10] 15 —Ä—É–± ‚Ññ1', callback_data = 'roomunfix1')
        btn1 = types.InlineKeyboardButton(text = '[0/10] 15 —Ä—É–± ‚Ññ2', callback_data = 'roomunfix2')
        btn2 = types.InlineKeyboardButton(text = '[0/10] 30 —Ä—É–± ‚Ññ3', callback_data = 'roomunfix3')
        btn3 = types.InlineKeyboardButton(text = '[0/10] 50 —Ä—É–± ‚Ññ4', callback_data = 'roomunfix4')
        btn4 = types.InlineKeyboardButton(text = '[0/10] 100 —Ä—É–± ‚Ññ5', callback_data = 'roomunfix5')
        btn5 = types.InlineKeyboardButton(text = '[0/10] 250 —Ä—É–± ‚Ññ6', callback_data = 'roomunfix6')
        btn6 = types.InlineKeyboardButton(text = '[0/10] 500 —Ä—É–± ‚Ññ7', callback_data = 'roomunfix7')
        btn7 = types.InlineKeyboardButton(text = '[0/10] 1000 —Ä—É–± ‚Ññ8', callback_data = 'roomunfix8')
        btn8 = types.InlineKeyboardButton(text = '[0/10] 2500 —Ä—É–± ‚Ññ9', callback_data = 'roomunfix9')
        btn9 = types.InlineKeyboardButton(text = '[0/10] 5000 —Ä—É–± ‚Ññ10', callback_data = 'roomunfix10')

        back = types.InlineKeyboardButton(text = '–ù–∞–∑–∞–¥üîô', callback_data = 'menu')

        markup.row(btn,btn1)
        markup.row(btn2,btn3)
        markup.row(btn4, btn5)
        markup.row(btn6,btn7)
        markup.row(btn8,btn9)
        markup.row(back)

        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id,
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É :', reply_markup = markup)

# –í–∫–ª—é—á–∞–µ–º —Ü–∏–∫–ª –¥–ª—è –±–æ—Ç–∞
bot.polling(none_stop=True)
